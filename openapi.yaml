openapi: 3.0.3
info:
  title: Nyra Wallet API
  description: API for Nyra Wallet business management and authentication
  version: 1.0.0
  contact:
    name: Nyra Wallet Support
    email: hi@mintlify.com

servers:
  - url: https://api.staging.nyrawallet.com/api/v2
    description: Staging server
  - url: https://api.nyrawallet.com/api/v2
    description: Production server

paths:

  /business/kyc/bvn/basic:
    get:
      summary: Basic BVN Verification
      description: Performs a basic BVN verification and returns core identity details
      tags:
        - KYC
      security:
        - ClientAuth: []
        - ClientSecret: []
      parameters:
        - name: bvn
          in: query
          required: true
          description: Bank Verification Number (11-digit string)
          schema:
            type: string
            pattern: '^[0-9]{11}$'
          example: "12345678901"
      responses:
        '200':
          description: Basic BVN verification completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Basic BVN verification completed successfully"
                  data:
                    type: object
                    properties:
                      first_name:
                        type: string
                        example: "john"
                      last_name:
                        type: string
                        example: "doe"
                      middle_name:
                        type: string
                        example: "junior"
                      date_of_birth:
                        type: string
                        format: date
                        example: "1990-01-01"
                      phone_number:
                        type: string
                        example: "08012345678"
              examples:
                success_response:
                  summary: Successful Response
                  description: Example of successful basic BVN verification
                  value:
                    success: true
                    message: "Basic BVN verification completed successfully"
                    data:
                      first_name: "john"
                      last_name: "doe"
                      middle_name: "junior"
                      date_of_birth: "1990-01-01"
                      phone_number: "08012345678"
        '400':
          description: Bad Request - Invalid payload, insufficient funds, or non-float wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Business or wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business/kyc/bvn/advance:
    get:
      summary: Advanced BVN Verification
      description: Performs an advanced BVN verification and returns extended identity details
      tags:
        - KYC
      security:
        - ClientAuth: []
        - ClientSecret: []
      parameters:
        - name: bvn
          in: query
          required: true
          description: Bank Verification Number (11-digit string)
          schema:
            type: string
            pattern: '^[0-9]{11}$'
          example: "12345678901"
      responses:
        '200':
          description: Advanced BVN verification completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Advance BVN verification completed successfully"
                  data:
                    type: object
                    properties:
                      first_name:
                        type: string
                        example: "john"
                      last_name:
                        type: string
                        example: "doe"
                      middle_name:
                        type: string
                        example: "junior"
                      gender:
                        type: string
                        example: "Male"
                      date_of_birth:
                        type: string
                        format: date
                        example: "1990-01-01"
                      phone_number1:
                        type: string
                        example: "08012345678"
                      phone_number2:
                        type: string
                        example: "08098765432"
                      email:
                        type: string
                        format: email
                        example: "john.doe@example.com"
                      enrollment_bank:
                        type: string
                        example: "214"
                      enrollment_branch:
                        type: string
                        example: "Main"
                      level_of_account:
                        type: string
                        example: "1"
                      lga_of_origin:
                        type: string
                        example: "Bende"
                      lga_of_residence:
                        type: string
                        example: "Karu"
                      marital_status:
                        type: string
                        example: "single"
                      name_on_card:
                        type: string
                        example: "JOHN DOE"
                      nationality:
                        type: string
                        example: "Nigeria"
                      registration_date:
                        type: string
                        example: "19-Apr-2023"
                      residential_address:
                        type: string
                        example: "123 test street"
                      state_of_origin:
                        type: string
                        example: "Abia State"
                      state_of_residence:
                        type: string
                        example: "Nasarawa State"
                      title:
                        type: string
                        example: "mr"
                      watch_listed:
                        type: string
                        example: "false"
                      base64_image:
                        type: string
                        example: "/9j/4AAQSkZJRgABAgAAAQABAAD..."
              examples:
                success_response:
                  summary: Successful Response
                  description: Example of successful advanced BVN verification
                  value:
                    success: true
                    message: "Advance BVN verification completed successfully"
                    data:
                      first_name: "john"
                      last_name: "doe"
                      middle_name: "junior"
                      gender: "Male"
                      date_of_birth: "1990-01-01"
                      phone_number1: "08012345678"
                      phone_number2: "08098765432"
                      email: "john.doe@example.com"
                      enrollment_bank: "214"
                      enrollment_branch: "Main"
                      level_of_account: "1"
                      lga_of_origin: "Bende"
                      lga_of_residence: "Karu"
                      marital_status: "single"
                      name_on_card: "JOHN DOE"
                      nationality: "Nigeria"
                      registration_date: "19-Apr-2023"
                      residential_address: "123 test street"
                      state_of_origin: "Abia State"
                      state_of_residence: "Nasarawa State"
                      title: "mr"
                      watch_listed: "false"
                      base64_image: "/9j/4AAQSkZJRgABAgAAAQABAAD..."
        '400':
          description: Bad Request - Invalid payload, insufficient funds, or non-float wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Business or wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business/kyc/nin:
    get:
      summary: NIN Verification
      description: Performs NIN verification and returns identity details including photo and employment status
      tags:
        - KYC
      security:
        - ClientAuth: []
        - ClientSecret: []
      parameters:
        - name: nin
          in: query
          required: true
          description: National Identity Number (11-digit string)
          schema:
            type: string
            pattern: '^[0-9]{11}$'
          example: "12345678901"
      responses:
        '200':
          description: NIN verification completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "NIN verification completed successfully"
                  data:
                    type: object
                    properties:
                      first_name:
                        type: string
                        example: "jane"
                      last_name:
                        type: string
                        example: "doe"
                      gender:
                        type: string
                        example: "female"
                      middle_name:
                        type: string
                        example: "junior"
                      photo:
                        type: string
                        example: "/9j/4AAQSkZJRgABAgAAAQABAAD..."
                      date_of_birth:
                        type: string
                        format: date
                        example: "1992-04-16"
                      email:
                        type: string
                        format: email
                        example: "jane.doe@example.com"
                      phone_number:
                        type: string
                        example: "08011112222"
                      employment_status:
                        type: string
                        example: "unemployed"
                      marital_status:
                        type: string
                        example: "single"
              examples:
                success_response:
                  summary: Successful Response
                  description: Example of successful NIN verification
                  value:
                    success: true
                    message: "NIN verification completed successfully"
                    data:
                      first_name: "jane"
                      last_name: "doe"
                      gender: "female"
                      middle_name: "junior"
                      photo: "/9j/4AAQSkZJRgABAgAAAQABAAD..."
                      date_of_birth: "1992-04-16"
                      email: "jane.doe@example.com"
                      phone_number: "08011112222"
                      employment_status: "unemployed"
                      marital_status: "single"
        '400':
          description: Bad Request - Invalid payload, insufficient funds, or non-float wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Business or wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business/transfers:
    post:
      summary: Initiate Business Transfer 
      description: Initiates a transfer from a business float wallet via API
      tags:
        - Business Transfers
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - beneficiary
                - source_account_number
                - amount
              properties:
                beneficiary:
                  type: object
                  required:
                    - account_name
                    - account_number
                    - bank_code
                  properties:
                    account_name:
                      type: string
                      description: Beneficiary name
                      example: "John Doe"
                    account_number:
                      type: string
                      description: Beneficiary account number
                      example: "1234567890"
                    bank_code:
                      type: string
                      description: Beneficiary bank code
                      example: "044"
                source_account_number:
                  type: string
                  description: Business float account number
                  example: "9876543210"
                amount:
                  type: number
                  description: Transfer amount (minimum 100)
                  example: 1000
                description:
                  type: string
                  description: Transfer narration (optional)
                  example: "Payment for services"
                sender_name:
                  type: string
                  description: Custom sender name (optional)
                  example: "Business Inc"
      responses:
        '201':
          description: Transfer initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Transfer initiated successfully"
                  data:
                    type: object
                    properties:
                      transaction_id:
                        type: string
                        example: "tx_123456789"
                      transaction_type:
                        type: string
                        example: "DEBIT"
                      transaction_category:
                        type: string
                        example: "WALLET_TRANSFER"
                      transaction_reference:
                        type: string
                        example: "TX123456789"
                      amount:
                        type: number
                        example: -1000
                      charge:
                        type: number
                        example: -50
                      description:
                        type: string
                        example: "Business Inc transfer to John Doe"
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-07-26T04:25:00.000Z"
        '400':
          description: Bad Request - Invalid payload, insufficient funds, or non-float wallet
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Invalid payload, insufficient funds, or non-float wallet"
        '401':
          description: Unauthorized - Invalid client credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Unauthorized"
                  message:
                    type: string
                    example: "Invalid client credentials"
        '404':
          description: Not Found - Business or wallet not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Business or wallet not found"
    

  /business/transfers/name-enquiry:
    post:
      summary: Name Enquiry
      description: Performs a name enquiry for a bank account
      tags:
        - Business Transfers
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - account_number
                - bank_code
              properties:
                account_number:
                  type: string
                  description: Account number to enquire
                  example: "1234567890"
                bank_code:
                  type: string
                  description: Bank code
                  example: "044"
      responses:
        '200':
          description: Name enquiry successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Name enquiry successful"
                  data:
                    type: object
                    properties:
                      account_number:
                        type: string
                        example: "1234567890"
                      account_name:
                        type: string
                        example: "John Doe"
                      bank_code:
                        type: string
                        example: "044"
                      bank_name:
                        type: string
                        example: "Access Bank"
        '400':
          description: Bad Request - Invalid account number or bank code
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Invalid account number or bank code"
        '401':
          description: Unauthorized - Invalid client credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Unauthorized"
                  message:
                    type: string
                    example: "Invalid client credentials"

  /business/transfers/bank/list:
    get:
      summary: Get Bank List
      description: Retrieves list of available banks
      tags:
        - Business Transfers
      security:
        - ClientAuth: []
        - ClientSecret: []
      responses:
        '200':
          description: Bank list retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Bank list retrieved successfully"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        bank_code:
                          type: string
                          example: "044"
                        bank_name:
                          type: string
                          example: "Access Bank"
                        bank_short_name:
                          type: string
                          example: "ACCESS"
        '401':
          description: Unauthorized - Invalid client credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Unauthorized"
                  message:
                    type: string
                    example: "Invalid client credentials"

  /business/wallets:
    post:
      summary: Create Wallet for Business
      description: Creates a new wallet for a customer under the business associated with the authenticated API client
      tags:
        - Wallets
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - first_name
                - last_name
                - dob
                - gender
                - title
                - address_line_1
                - city
                - country
                - phone_number
                - email
                - bvn
              properties:
                first_name:
                  type: string
                  description: Customer's first name
                  example: "John"
                last_name:
                  type: string
                  description: Customer's last name
                  example: "Doe"
                name_on_account:
                  type: string
                  description: Name on the account
                  example: "John Doe"
                middlename:
                  type: string
                  description: Customer's middle name
                  example: "Michael"
                dob:
                  type: string
                  format: date
                  description: Date of birth in ISO format
                  example: "1990-01-01"
                gender:
                  type: string
                  description: Customer's gender
                  example: "Male"
                title:
                  type: string
                  description: Customer's title
                  example: "Mr"
                address_line_1:
                  type: string
                  description: Primary address line
                  example: "123 Main Street"
                address_line_2:
                  type: string
                  description: Secondary address line
                  example: "Apt 4B"
                city:
                  type: string
                  description: City
                  example: "Lagos"
                country:
                  type: string
                  description: Country
                  example: "Nigeria"
                phone_number:
                  type: string
                  description: Valid phone number
                  example: "+2348012345678"
                email:
                  type: string
                  format: email
                  description: Valid email address
                  example: "john.doe@example.com"
                bvn:
                  type: string
                  pattern: '^[0-9]{11}$'
                  description: Bank Verification Number (11-digit string)
                  example: "12345678901"
      responses:
        '201':
          description: Wallet created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Wallet created successfully"
                  data:
                    type: object
                    properties:
                      wallet_id:
                        type: string
                        example: "wallet_12345"
                      account_number:
                        type: string
                        example: "1234567890"
                      bank_name:
                        type: string
                        example: "Polaris"
                      owners_fullname:
                        type: string
                        example: "John Doe"
                      frozen:
                        type: boolean
                        example: false
                      business_id:
                        type: string
                        example: "dbd9b5d80ecea461a7145d0c"
                      isFloat:
                        type: boolean
                        example: false
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-07-26T04:22:00.000Z"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2025-07-26T04:22:00.000Z"
        '400':
          description: Bad Request - Invalid request payload or BVN not an 11-digit string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid client ID or secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - API client not authorized for the business
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

        '409':
          description: Conflict - Wallet already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 409
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Conflict"
                  message:
                    type: string
                    example: "Wallet already exists for customer"

  /business/wallets/{walletId}:
    get:
      summary: Get Sub-Wallet Details
      description: Retrieves details of a specific sub-wallet (customer or float) for the business associated with the authenticated API client.
      tags:
        - Wallets
      security:
        - ClientAuth: []
        - ClientSecret: []
      parameters:
        - name: walletId
          in: path
          required: true
          description: The ID of the wallet
          schema:
            type: string
          example: "wallet_12345"
      responses:
        '200':
          description: Wallet fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Wallet fetched successfully"
                  data:
                    type: object
                    properties:
                      wallet_id:
                        type: string
                        example: "wallet_12345"
                      account_number:
                        type: string
                        example: "1234567890"
                      bank_name:
                        type: string
                        example: "Polaris"
                      owners_fullname:
                        type: string
                        example: "John Doe"
                      frozen:
                        type: boolean
                        example: false
                      business_id:
                        type: string
                        example: "dbd9b5d80ecea461a7145d0c"
                      isFloat:
                        type: boolean
                        example: false
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-07-26T04:22:00.000Z"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2025-07-26T04:22:00.000Z"
        '400':
          description: Bad Request - Invalid wallet ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid client ID or secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - API client not authorized for the business
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'



  /business/wallets/all:
    get:
      summary: Get All Customer Sub-Wallets
      description: Retrieves all customer sub-wallets for the business associated with the authenticated API client. Excludes business float wallets.
      tags:
        - Wallets
      security:
        - ClientAuth: []
        - ClientSecret: []
      responses:
        '200':
          description: Sub wallets fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Sub wallets fetched successfully"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        wallet_id:
                          type: string
                          example: "wallet_12345"
                        account_number:
                          type: string
                          example: "1234567890"
                        bank_name:
                          type: string
                          example: "Polaris"
                        owners_fullname:
                          type: string
                          example: "John Doe"
                        frozen:
                          type: boolean
                          example: false
                        business_id:
                          type: string
                          example: "dbd9b5d80ecea461a7145d0c"
                        isFloat:
                          type: boolean
                          example: false
                        created_at:
                          type: string
                          format: date-time
                          example: "2025-07-26T04:22:00.000Z"
                        updated_at:
                          type: string
                          format: date-time
                          example: "2025-07-26T04:22:00.000Z"
        '401':
          description: Unauthorized - Invalid client ID or secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - API client not authorized for the business
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business/wallets/wallet_balance:
    get:
      summary: Get Business Wallet Balance
      description: Retrieves the balance of the primary wallet for the business associated with the authenticated API client.
      tags:
        - Wallets
      security:
        - ClientAuth: []
        - ClientSecret: []
      responses:
        '200':
          description: Wallet balance fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Wallet balance fetched successfully"
                  data:
                    type: object
                    properties:
                      businessId:
                        type: string
                        example: "dbd9b5d80ecea461a7145d0c"
                      businessName:
                        type: string
                        example: "Business Inc"
                      balance:
                        type: number
                        example: 1000000
        '401':
          description: Unauthorized - Invalid client ID or secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - API client not authorized for the business
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Business or its wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business/wallets/float:
    get:
      summary: Get Business Float Wallets
      description: Retrieves all float wallets for the business associated with the authenticated API client.
      tags:
        - Wallets
      security:
        - ClientAuth: []
        - ClientSecret: []
      responses:
        '200':
          description: Business float wallets fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Business float wallets fetched successfully"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        wallet_id:
                          type: string
                          example: "wallet_12345"
                        account_number:
                          type: string
                          example: "1234567890"
                        bank_name:
                          type: string
                          example: "Polaris"
                        owners_fullname:
                          type: string
                          example: "Business Inc"
                        frozen:
                          type: boolean
                          example: false
                        business_id:
                          type: string
                          example: "dbd9b5d80ecea461a7145d0c"
                        isFloat:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          format: date-time
                          example: "2025-07-26T04:22:00.000Z"
                        updated_at:
                          type: string
                          format: date-time
                          example: "2025-07-26T04:22:00.000Z"
        '401':
          description: Unauthorized - Invalid client ID or secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - API client not authorized for the business
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Business not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business/{businessId}/wallet:
    get:
      summary: Get Parent Wallet Details
      description: Retrieves details of the parent wallet for a business, accessible by an authenticated user.
      tags:
        - Wallets
      security:
        - BearerAuth: []
      parameters:
        - name: businessId
          in: path
          required: true
          description: The business ID
          schema:
            type: string
          example: "dbd9b5d80ecea461a7145d0c"
      responses:
        '200':
          description: Wallet retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Wallet retrieved successfully"
                  data:
                    type: object
                    properties:
                      wallet_id:
                        type: string
                        example: "wallet_54321"
                      account_number:
                        type: string
                        example: "1234567890"
                      business:
                        type: object
                        properties:
                          id:
                            type: string
                            example: "dbd9b5d80ecea461a7145d0c"
                          name:
                            type: string
                            example: "Business Inc"
                      owner:
                        type: object
                        properties:
                          user_id:
                            type: string
                            example: "USER-01HZNXAE7G9C97HD74SN6XQDTF"
                          email:
                            type: string
                            example: "user@example.com"
                      frozen:
                        type: boolean
                        example: false
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-07-26T04:22:00.000Z"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2025-07-26T00:00:00.000Z"
        '400':
          description: Bad Request - Invalid businessId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Wallet or business not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business/transactions:
    get:
      summary: List Business Transactions
      description: Retrieves a list of all transactions for businesses owned by the authenticated user.
      tags:
        - Business Transactions
      security:
        - ClientAuth: []
        - ClientSecret: []
      parameters:
        - name: page
          in: query
          required: false
          description: Page number for pagination
          schema:
            type: integer
            default: 1
          example: 1
        - name: limit
          in: query
          required: false
          description: Number of items per page
          schema:
            type: integer
            default: 10
          example: 10
        - name: business_id
          in: query
          required: false
          description: Filter by specific business ID
          schema:
            type: string
          example: "65e6e6d18d41d876944861da"
        - name: transaction_type
          in: query
          required: false
          description: Filter by transaction type
          schema:
            type: string
            enum: ["CREDIT", "DEBIT", "TRANSFER", "BILL_PAYMENT"]
          example: "CREDIT"
      responses:
        '200':
          description: Transactions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "65e6e6d18d41d876944861da"
                        business_id:
                          type: string
                          example: "65e6e6d18d41d876944861da"
                        wallet_id:
                          type: string
                          example: "65e6e6d18d41d876944861da"
                        transaction_type:
                          type: string
                          enum: ["CREDIT", "DEBIT", "TRANSFER", "BILL_PAYMENT"]
                          example: "CREDIT"
                        amount:
                          type: number
                          example: 50000
                        currency:
                          type: string
                          example: "NGN"
                        status:
                          type: string
                          enum: ["PENDING", "COMPLETED", "FAILED"]
                          example: "COMPLETED"
                        reference:
                          type: string
                          example: "TXN123456789"
                        description:
                          type: string
                          example: "Payment for services"
                        created_at:
                          type: string
                          format: date-time
                          example: "2024-01-15T10:30:00Z"
                  message:
                    type: string
                    example: "Transactions retrieved successfully"

  /business/transactions/{transaction_id}:
    get:
      summary: Get Transaction Details
      description: Retrieves detailed information about a specific transaction.
      tags:
        - Business Transactions
      security:
        - ClientAuth: []
        - ClientSecret: []
      parameters:
        - name: transaction_id
          in: path
          required: true
          description: The ID of the transaction
          schema:
            type: string
          example: "65e6e6d18d41d876944861da"
      responses:
        '200':
          description: Transaction details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "65e6e6d18d41d876944861da"
                      business_id:
                        type: string
                        example: "65e6e6d18d41d876944861da"
                      wallet_id:
                        type: string
                        example: "65e6e6d18d41d876944861da"
                      transaction_type:
                        type: string
                        enum: ["CREDIT", "DEBIT", "TRANSFER", "BILL_PAYMENT"]
                        example: "CREDIT"
                      amount:
                        type: number
                        example: 50000
                      currency:
                        type: string
                        example: "NGN"
                      status:
                        type: string
                        enum: ["PENDING", "COMPLETED", "FAILED"]
                        example: "COMPLETED"
                      reference:
                        type: string
                        example: "TXN123456789"
                      description:
                        type: string
                        example: "Payment for services"
                      metadata:
                        type: object
                        properties:
                          source:
                            type: string
                            example: "bank_transfer"
                          destination:
                            type: string
                            example: "business_wallet"
                      created_at:
                        type: string
                        format: date-time
                        example: "2024-01-15T10:30:00Z"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2024-01-15T11:30:00Z"
                  message:
                    type: string
                    example: "Transaction details retrieved successfully"
        '404':
          description: Not Found - Transaction not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Transaction not found"








  /business/wallets/temporary-account:
    post:
      summary: Create Temporary Account
      description: Creates a one-time virtual account for funding a business wallet.
      tags:
        - Temporary Accounts
      security:
        - ClientAuth: []
          ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [external_reference, amount]
              properties:
                external_reference:
                  type: string
                  description: Unique reference (10–26 chars)
                  example: "LIM45699343399438"
                amount:
                  type: number
                  description: Expected funding amount in NGN (min 300)
                  example: 5000
                expiresIn:
                  type: number
                  description: Account validity in seconds
                  example: 900
                meta:
                  type: object
                  properties:
                    customer_name:
                      type: string
                      example: "John Doe"
                    customer_email:
                      type: string
                      example: "john.doe@example.com"
      responses:
        '200':
          description: Temporary account created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Temporary account created successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "01K22HK0MGGAPQFBNV0T045CBW"
                      business:
                        type: string
                        example: "9718b4b64b70add2215210c7"
                      account_number:
                        type: string
                        example: "6029414052"
                      account_name:
                        type: string
                        example: "Nyra Wallet Checkout"
                      bank_name:
                        type: string
                        example: "Safe Haven MFB"
                      amount:
                        type: number
                        example: 5090.00
                      bank_code:
                        type: string
                        example: "090286"
                      expiry_date:
                        type: string
                        format: date-time
                        example: "2025-08-07T16:51:00.000Z"
                      status:
                        type: string
                        example: "pending"
                      expiresIn:
                        type: number
                        example: 900
                      external_reference:
                        type: string
                        example: "LIM45699343399438"
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-08-07T16:36:00.000Z"
                      meta:
                        type: object
                        properties:
                          customer_name:
                            type: string
                            example: "John Doe"
                          customer_email:
                            type: string
                            example: "john.doe@example.com"
        '400':
          description: Invalid payload or duplicate external_reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to create the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /business/wallets/temporary-account/{id}:
    get:
      summary: Get Temporary Account
      description: Retrieves details of a specific temporary account by its ID.
      tags:
        - Temporary Accounts
      security:
        - ClientAuth: []
          ClientSecret: []
      parameters:
        - in: path
          name: id
          required: true
          description: Temporary account ID (UUID)
          schema:
            type: string
          example: "01K22HK0MGGAPQFBNV0T045CBW"
      responses:
        '200':
          description: Temporary account fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Temporary account fetched successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "01K22HK0MGGAPQFBNV0T045CBW"
                      account_number:
                        type: string
                        example: "6029414052"
                      account_name:
                        type: string
                        example: "Nyra Wallet Checkout"
                      bank_name:
                        type: string
                        example: "Safe Haven MFB"
                      amount:
                        type: number
                        example: 5090.00
                      bank_code:
                        type: string
                        example: "090286"
                      expiry_date:
                        type: string
                        format: date-time
                        example: "2025-08-07T16:51:00.000Z"
                      status:
                        type: string
                        example: "pending"
                      expiresIn:
                        type: number
                        example: 900
                      external_reference:
                        type: string
                        example: "LIM45699343399438"
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-08-07T16:36:00.000Z"
                      meta:
                        type: object
                        properties:
                          customer_name:
                            type: string
                            example: "John Doe"
                          customer_email:
                            type: string
                            example: "john.doe@example.com"
        '400':
          description: Missing or invalid id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Temporary account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to retrieve the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /business/wallets/temporary-account/{sessionId}/status:
    get:
      summary: Get Temporary Account Transfer Status
      description: Retrieves the transfer status of a temporary account by its session ID.
      tags:
        - Temporary Accounts
      security:
        - ClientAuth: []
          ClientSecret: []
      parameters:
        - in: path
          name: sessionId
          required: true
          description: Session ID of the transfer
          schema:
            type: string
          example: "68714b6cc0f8770024c37a90"
      responses:
        '200':
          description: Completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Completed successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "68714b6cc0f8770024c37a90"
                      business:
                        type: string
                        example: "9718b4b64b70add2215210c7"
                      virtualAccount:
                        type: object
                        properties:
                          id:
                            type: string
                            example: "01K22HK0MGGAPQFBNV0T045CBW"
                          account_number:
                            type: string
                            example: "6029414052"
                          account_name:
                            type: string
                            example: "Nyra Wallet Checkout"
                          bank_name:
                            type: string
                            example: "Safe MFB"
                          amount:
                            type: number
                            example: 5090.00
                          bank_code:
                            type: string
                            example: "090286"
                          expiry_date:
                            type: string
                            format: date-time
                            example: "2025-08-07T16:51:00.000Z"
                          status:
                            type: string
                            example: "successful"
                          expiresIn:
                            type: number
                            example: 900
                          external_reference:
                            type: string
                            example: "LIM45699343399438"
                          created_at:
                            type: string
                            format: date-time
                            example: "2025-08-07T16:36:00.000Z"
                          meta:
                            type: object
                            properties:
                              customer_name:
                                type: string
                                example: "John Doe"
                              customer_email:
                                type: string
                                example: "john.doe@example.com"
                      credit_account_number:
                        type: string
                        example: "6025123067"
                      credit_account_name:
                        type: string
                        example: "Nyra Wallet Checkout"
                      amount_paid:
                        type: number
                        example: 5000
                      external_reference:
                        type: string
                        example: "LIZ45699343399438"
                      currency:
                        type: string
                        example: "NGN"
                      provider:
                        type: string
                        example: "NYRA WALLET"
                      narration:
                        type: string
                        example: "Transfer from JANE DOE"
                      paid_at:
                        type: string
                        format: date-time
                        example: "2025-08-07T16:45:00.000Z"
                      sender_bank:
                        type: string
                        example: "Safe Haven MFB"
                      sender_name:
                        type: string
                        example: "JANE DOE"
                      sender_account_number:
                        type: string
                        example: "9138639500"
                      status:
                        type: string
                        example: "Completed"
        '400':
          description: Missing or invalid sessionId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Temporary account or session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to retrieve the status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /business/identities/bvn/verify:
    post:
      summary: Verify BVN
      description: Verifies the user's BVN for the business.
      tags:
        - Identity Verification
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bvn
                - dob
              properties:
                bvn:
                  type: string
                  description: The Bank Verification Number
                  example: "12345678901"
                dob:
                  type: string
                  format: date
                  description: The correct date of birth of the BVN holder (ISO Format -> 2000-07-15)
                  example: "2000-07-15"
      responses:
        '200':
          description: BVN verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "bvn verified successfully"
        '400':
          description: Bad Request - Invalid BVN or verification fails
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Invalid BVN or verification fails"
        '403':
          description: Forbidden - User lacks permission
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 403
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Forbidden"
                  message:
                    type: string
                    example: "User lacks permission"

  /business/identities/nin/verify:
    post:
      summary: Verify NIN
      description: Verifies the user's NIN for the business.
      tags:
        - Identity Verification
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nin
              properties:
                nin:
                  type: string
                  description: The National Identification Number
                  example: "12345678901"
      responses:
        '200':
          description: NIN verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "nin verified successfully"
        '400':
          description: Bad Request - Invalid NIN or verification fails
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Invalid NIN or verification fails"
        '403':
          description: Forbidden - User lacks permission
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 403
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Forbidden"
                  message:
                    type: string
                    example: "User lacks permission"

  /business/identities/cac/verify:
    post:
      summary: Verify CAC
      description: Verifies the business's CAC registration number.
      tags:
        - Identity Verification
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - registration_number
                - business_id
              properties:
                registration_number:
                  type: string
                  description: The CAC registration number
                  example: "RC123456"
                business_id:
                  type: string
                  description: The ID of the business
                  example: "65e6e6d18d41d876944861da"
      responses:
        '200':
          description: CAC verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "cac verified successfully"
        '400':
          description: Bad Request - Invalid registration number, already linked, or does not match business name
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Invalid registration number, already linked, or does not match business name"
        '403':
          description: Forbidden - User does not own the business
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 403
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Forbidden"
                  message:
                    type: string
                    example: "User does not own the business"
        '404':
          description: Not Found - Business not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Business not found"

  /business/identities/bvn/verify-phone:
    post:
      summary: Verify BVN Phone Number
      description: Verifies the phone number associated with the user's BVN.
      tags:
        - Identity Verification
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone_number
              properties:
                phone_number:
                  type: string
                  description: The phone number to verify
                  example: "08012345678"
      responses:
        '200':
          description: Phone number validated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "phone number validated"
        '400':
          description: Bad Request - Invalid phone number or verification fails
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Invalid phone number or verification fails"
        '403':
          description: Forbidden - User lacks permission
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 403
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Forbidden"
                  message:
                    type: string
                    example: "User lacks permission"

  /business/identities/docs/upload:
    post:
      summary: Upload Business Identity Documents
      description: Uploads business identity documents (e.g., certificate of incorporation).
      tags:
        - Identity Verification
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - business_id
              properties:
                business_id:
                  type: string
                  description: The ID of the business
                  example: "65e6e6d18d41d876944861da"
                certificate_of_incorporation:
                  type: string
                  format: binary
                  description: Certificate of incorporation (optional, max 1GB)
                application_for_registration:
                  type: string
                  format: binary
                  description: Application for registration (optional, max 1GB)
                memorandum_of_association:
                  type: string
                  format: binary
                  description: Memorandum of association (optional, max 1GB)
                proof_of_address:
                  type: string
                  format: binary
                  description: Proof of address (optional, max 1GB)
      responses:
        '201':
          description: Document uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      businessId:
                        type: string
                        example: "65e6e6d18d41d876944861da"
                      verificationStatus:
                        type: string
                        enum: ["VERIFIED", "PENDING"]
                        example: "VERIFIED"
                      documentsProcessed:
                        type: array
                        items:
                          type: string
                        example: ["certificate_of_incorporation", "proof_of_address"]
                  message:
                    type: string
                    example: "document uploaded successfully!"
        '400':
          description: Bad Request - Invalid files or business ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Invalid files or business ID"
        '403':
          description: Forbidden - User does not own the business
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 403
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Forbidden"
                  message:
                    type: string
                    example: "User does not own the business"
        '404':
          description: Not Found - Business not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Business not found"




  /business/bills/airtime-data/data/data-plans:
    get:
      summary: Get Data Plans
      description: Retrieves available data plans for a network provider
      tags:
        - Bills
      security:
        - ClientAuth: []
        - ClientSecret: []
      parameters:
        - name: network
          in: query
          required: true
          description: Network provider (MTN, Airtel, Glo, 9mobile)
          schema:
            type: string
            enum: ["MTN", "Airtel", "Glo", "9mobile"]
          example: "MTN"
      responses:
        '200':
          description: Data plans retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Data plans retrieved successfully"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "1"
                        name:
                          type: string
                          example: "1GB - 30 Days"
                        amount:
                          type: string
                          example: "1000"
                        validity:
                          type: string
                          example: "30 days"
        '400':
          description: Bad Request - Invalid network provider
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Invalid network provider"
        '401':
          description: Unauthorized - Invalid client credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Unauthorized"
                  message:
                    type: string
                    example: "Invalid client credentials"
        '404':
          description: Not Found - Data plans not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Data plans not found"

  /business/bills/airtime-data/airtime/purchase:
    post:
      summary: Purchase Airtime 
      description: Processes airtime purchase via API
      tags:
        - Bills
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone_number
                - network
                - amount
                - source_account_number
              properties:
                phone_number:
                  type: string
                  description: Phone number to purchase airtime for (Nigerian format)
                  example: "08012345678"
                network:
                  type: string
                  description: Network provider (MTN, Airtel, Glo, 9mobile)
                  example: "MTN"
                amount:
                  type: number
                  description: Amount to purchase (minimum 100)
                  example: 1000
                source_account_number:
                  type: string
                  description: Business float account number
                  example: "9016997676"
                description:
                  type: string
                  description: Description of the purchase
                  example: "Airtime purchase for customer"
      responses:
        '201':
          description: Airtime purchased successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Airtime purchase successful"
                  data:
                    type: object
                    properties:
                      reference:
                        type: string
                        example: "ULID123456789"
                      amount:
                        type: number
                        example: 5000
                      status:
                        type: string
                        example: "delivered"
        '400':
          description: Bad Request - Invalid phone number or amount
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Invalid phone number or amount"
        '401':
          description: Unauthorized - Invalid client credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Unauthorized"
                  message:
                    type: string
                    example: "Invalid client credentials"
        '404':
          description: Not Found - Business or wallet not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Business or wallet not found"

  /business/bills/airtime-data/phone-number/network:
    get:
      summary: Get Network for Phone Number
      description: Retrieves the network provider for a given phone number
      tags:
        - Bills
      security:
        - ClientAuth: []
        - ClientSecret: []
      parameters:
        - name: phone_number
          in: query
          required: true
          description: Phone number to lookup (Nigerian format)
          schema:
            type: string
          example: "08012345678"
      responses:
        '200':
          description: Network retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Network retrieved successfully"
                  data:
                    type: object
                    properties:
                      network:
                        type: string
                        example: "MTN"
                      network_id:
                        type: string
                        example: "1"
        '400':
          description: Bad Request - Invalid phone number format
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Invalid phone number format"
        '401':
          description: Unauthorized - Invalid client credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Unauthorized"
                  message:
                    type: string
                    example: "Invalid client credentials"
        '404':
          description: Not Found - Network not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Network not found"

  /business/bills/airtime-data/phone-number/{network}:
    post:
      summary: Purchase Airtime
      description: Purchases airtime for a phone number.
      tags:
        - Bills
      security:
        - ClientAuth: []
        - ClientSecret: []
      parameters:
        - name: network
          in: path
          required: true
          description: The network provider (MTN, Airtel, Glo, 9mobile)
          schema:
            type: string
            enum: ["MTN", "Airtel", "Glo", "9mobile"]
          example: "MTN"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone_number
                - amount
                - business_id
              properties:
                phone_number:
                  type: string
                  description: The phone number to purchase airtime for
                  example: "08012345678"
                amount:
                  type: number
                  description: Amount to purchase (in kobo)
                  example: 100000
                business_id:
                  type: string
                  description: The ID of the business
                  example: "65e6e6d18d41d876944861da"
      responses:
        '201':
          description: Airtime purchased successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      transaction_id:
                        type: string
                        example: "65e6e6d18d41d876944861da"
                      reference:
                        type: string
                        example: "TXN123456789"
                      status:
                        type: string
                        enum: ["PENDING", "COMPLETED", "FAILED"]
                        example: "PENDING"
                  message:
                    type: string
                    example: "Airtime purchased successfully"
        '400':
          description: Bad Request - Invalid phone number or amount
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Invalid phone number or amount"

  /business/bills/airtime-data/data-purchase:
    post:
      summary: Purchase Data Bundle 
      description: Processes data purchase via API
      tags:
        - Bills
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone_number
                - network
                - bundle_id
                - amount
                - source_account_number
              properties:
                phone_number:
                  type: string
                  description: Phone number to purchase data for (Nigerian format)
                  example: "08012345678"
                network:
                  type: string
                  description: Network provider (MTN, Airtel, Glo, 9mobile)
                  example: "MTN"
                bundle_id:
                  type: string
                  description: Data bundle ID
                  example: "1"
                amount:
                  type: number
                  description: Amount for data purchase (minimum 100)
                  example: 1000
                source_account_number:
                  type: string
                  description: Business float account number
                  example: "9016997676"
                description:
                  type: string
                  description: Purchase description
                  example: "Data purchase for customer"
      responses:
        '201':
          description: Data bundle purchased successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Data purchase successful"
                  data:
                    type: object
                    properties:
                      reference:
                        type: string
                        example: "ULID123456789"
                      amount:
                        type: number
                        example: 5000
                      status:
                        type: string
                        example: "delivered"
        '400':
          description: Bad Request - Invalid phone number or plan
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  status:
                    type: string
                    example: "error"
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "Invalid phone number or plan"

  /business/bills/electricity/validate:
    post:
      summary: Validate Electricity Data
      description: Validates electricity meter data and retrieves customer information.
      tags:
        - Bills
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - biller_id
                - payment_type_id
                - meter_number
              properties:
                biller_id:
                  type: string
                  description: Electricity provider ID
                  example: "1"
                payment_type_id:
                  type: string
                  description: Payment type ID
                  example: "VT01"
                meter_number:
                  type: string
                  description: Meter number (minimum 10 digits)
                  example: "12345678901"
                amount:
                  type: string
                  description: Amount to validate (optional)
                  example: "5000"
      responses:
        '200':
          description: Electricity data validated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Electricity data validated successfully"
                  data:
                    type: object
                    properties:
                      customer_name:
                        type: string
                        example: "John Doe"
                      customer_info:
                        type: string
                        example: "Test Customer"
                      outstanding:
                        type: string
                        example: "1500"
                      amount:
                        type: string
                        example: "5000"
        '400':
          description: Invalid meter number or biller ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Meter not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business/bills/electricity/provider/items:
    get:
      summary: Get Electricity Provider Items
      description: Retrieves available payment types for an electricity provider.
      tags:
        - Bills
      security:
        - ClientAuth: []
        - ClientSecret: []
      parameters:
        - name: biller_id
          in: query
          required: true
          description: Electricity provider ID
          schema:
            type: string
            example: "1"
      responses:
        '200':
          description: Electricity provider items retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Electricity provider items retrieved successfully"
                  data:
                    type: object
                    properties:
                      payment_type_id:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                label:
                                  type: string
                                  example: "PREPAID"
                                id:
                                  type: string
                                  example: "VT01"
                                amount:
                                  type: number
                                  example: 0
        '400':
          description: Invalid biller ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business/bills/electricity/pay:
    post:
      summary: Pay Electricity Bill 
      description: Processes electricity bill payment via API.
      tags:
        - Bills
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - biller_id
                - payment_type_id
                - meter_number
                - amount
                - customer_name
                - source_account_number
              properties:
                biller_id:
                  type: string
                  description: Electricity provider ID
                  example: "1"
                payment_type_id:
                  type: string
                  description: Payment type ID
                  example: "VT01"
                meter_number:
                  type: string
                  description: Meter number (minimum 10 digits)
                  example: "12345678901"
                amount:
                  type: number
                  description: Payment amount (minimum 100)
                  example: 5000
                phone_number:
                  type: string
                  description: Contact phone number (optional)
                  example: "08012345678"
                customer_name:
                  type: string
                  description: Customer name
                  example: "John Doe"
                source_account_number:
                  type: string
                  description: Business float account number
                  example: "1234567890"
                description:
                  type: string
                  description: Payment description (optional)
                  example: "Electricity payment for July"
      responses:
        '201':
          description: Electricity payment successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Electricity payment successful"
                  data:
                    type: object
                    properties:
                      reference:
                        type: string
                        example: "ULID123456789"
                      amount:
                        type: number
                        example: 5000
                      status:
                        type: string
                        example: "delivered"
        '400':
          description: Invalid payload, insufficient funds, or non-float wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Business or wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'



  /business/bills/tv/validate:
    post:
      summary: Validate TV Data
      description: Validates TV smart card data and retrieves customer information.
      tags:
        - Bills
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tv_biller_id
                - smart_card_number
              properties:
                tv_biller_id:
                  type: string
                  description: TV provider ID
                  example: "3"
                smart_card_number:
                  type: string
                  description: Smart card number (numeric only)
                  example: "1234567890123456"
                pkg_id:
                  type: string
                  description: Package ID (optional)
                  example: "PKG001"
                amount:
                  type: string
                  description: Amount to validate (optional)
                  example: "15000"
      responses:
        '200':
          description: TV data validated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "TV data validated successfully"
                  data:
                    type: object
                    properties:
                      customer_name:
                        type: string
                        example: "Jane Smith"
                      customer_info:
                        type: string
                        example: "Test TV Customer"
        '400':
          description: Invalid smart card number or biller ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Smart card not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business/bills/tv/provider/items:
    get:
      summary: Get TV Provider Items
      description: Retrieves available packages for a TV provider.
      tags:
        - Bills
      security:
        - ClientAuth: []
        - ClientSecret: []
      parameters:
        - name: biller_id
          in: query
          required: true
          description: TV provider ID
          schema:
            type: string
            example: "3"
      responses:
        '200':
          description: TV provider items retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "TV provider items retrieved successfully"
                  data:
                    type: object
                    properties:
                      pkg_id:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                label:
                                  type: string
                                  example: "DStv Compact - N19,000"
                                id:
                                  type: string
                                  example: "ng_dstv_compe36"
                                amount:
                                  type: number
                                  example: 19000
        '400':
          description: Invalid biller ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business/bills/tv/pay:
    post:
      summary: Pay TV Subscription 
      description: Processes TV subscription payment via API.
      tags:
        - Bills
      security:
        - ClientAuth: []
        - ClientSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tv_biller_id
                - smart_card_number
                - package_id
                - amount
                - customer_name
                - source_account_number
              properties:
                tv_biller_id:
                  type: string
                  description: TV provider ID
                  example: "3"
                smart_card_number:
                  type: string
                  description: Smart card number (numeric only)
                  example: "1234567890123456"
                package_id:
                  type: string
                  description: Package ID
                  example: "PKG001"
                amount:
                  type: number
                  description: Payment amount (minimum 100)
                  example: 15000
                phone_number:
                  type: string
                  description: Contact phone number (optional)
                  example: "08012345678"
                customer_name:
                  type: string
                  description: Customer name
                  example: "John Doe"
                source_account_number:
                  type: string
                  description: Business float account number
                  example: "1234567890"
                description:
                  type: string
                  description: Payment description (optional)
                  example: "DStv subscription for July"
      responses:
        '201':
          description: TV payment successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "TV payment successful"
                  data:
                    type: object
                    properties:
                      reference:
                        type: string
                        example: "ULID123456789"
                      amount:
                        type: number
                        example: 5000
                      status:
                        type: string
                        example: "delivered"
        '400':
          description: Invalid payload, insufficient funds, or non-float wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Business or wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business/vas/services:
    get:
      summary: Get Services
      description: Retrieves all available services for business bills.
      tags:
        - Bills
      security:
        - ClientAuth: []
          ClientSecret: []
      responses:
        '200':
          description: Services retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Services retrieved successfully"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "1"
                        service:
                          type: string
                          example: "airtime"
                    example:
                      - id: "1"
                        service: "airtime"
                      - id: "2"
                        service: "data"
                      - id: "3"
                        service: "electricity"
                      - id: "4"
                        service: "cable_tv"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business/vas/{service_id}/billers:
    get:
      summary: Get Category Billers
      description: Retrieves billers for a specific service.
      tags:
        - Bills
      security:
        - ClientAuth: []
          ClientSecret: []
      parameters:
        - in: path
          name: service_id
          required: true
          schema:
            type: string
            example: "3"
          description: Service ID (1=airtime, 2=data, 3=electricity, 4=cable_tv)
      responses:
        '200':
          description: Service billers retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Service billers retrieved successfully"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        biller:
                          type: string
                    example:
                      - id: "61efac19b5ce7eaad3b405d4"
                        biller: "BEDC"
                      - id: "61efac27da92348f9dde5f74"
                        biller: "EKEDC"
                      - id: "61efac35da92348f9dde5f77"
                        biller: "AEDC"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ClientAuth:
      type: apiKey
      in: header
      name: x-client-id
    ClientSecret:
      type: http
      scheme: bearer
      description: Client secret passed as Bearer token in Authorization header

  schemas:
    ErrorResponse:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        status:
          type: string
          example: "error"
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "Bad Request"
        message:
          type: string
          example: "Invalid request parameters"

tags:

  - name: Wallets
    description: Wallet management operations
  - name: Transactions
    description: Transaction PIN operations
  - name: Business Transfers
    description: Business transfer operations
  - name: Business Transactions
    description: Business wallet transaction operations

  - name: Bills
    description: Bill payment operations (airtime, data)

  - name: Temporary Accounts
    description: Temporary virtual account operations

  - name: Identity Verification
    description: Business identity verification operations

  - name: KYC
    description: Know Your Customer verification operations
